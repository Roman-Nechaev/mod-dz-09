{"mappings":"YAyBwB,SAAfA,EAAKC,GAEG,OAAR,IAAIC,SAAQ,SAAAC,GACjBC,YAAW,WACTD,EAAQF,KAHC,QAOfD,EAXa,CAAC,QAAS,SAAU,OAAQ,QACnBK,IAAIL,IAUXM,MAAK,SAAAC,G,OAAKC,QAAQC,IAAIF,M","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\n// const timer = {\n//   start() {\n//     const startTime = Date.now();\n\n//     setInterval(() => {\n//       const currentTime = Date.now();\n//       console.log(currentTime - startTime);\n//     }, 1000);\n//   },\n// };\n\n// timer.start();\n\nconst mass = ['Roman', 'Ragnar', 'Thor', 'Odin']; // массив объектов\nconst promises = mass.map(prom); // возвращает массив объектов\n// const promises = mass.map(mas => prom(mas)); // идентичная запись что и выше\nfunction prom(mas) {\n  const TIME = 2000; // дефолт интервала\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(mas);\n    }, TIME);\n  }); // промис БЕЗ обработки ощибки\n}\nprom(promises).then(x => console.log(x)); // результат и вызов промиса\n"],"names":["$ce04d3a99e08e73b$var$prom","mas","Promise","resolve","setTimeout","map","then","x","console","log"],"version":3,"file":"03-promises.ac8133d4.js.map"}