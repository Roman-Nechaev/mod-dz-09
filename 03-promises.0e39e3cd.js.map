{"mappings":"AAAAA,KAAO,CACLC,KAAMC,SAASC,cAAc,SAC7BC,IAAKF,SAASC,cAAc,WAE9BE,QAAQC,IAAIN,KAAKC,MACjBI,QAAQC,IAAIN,KAAKI,MAGOG,KAAKC,SACpB,IAAIC,SAAQ,CAACC,EAASC,UAS5BC,MAAK,EAACC,SAAEA,EAAQC,MAAEA,MACjBT,QAAQC,IAAI,uBAAqBO,QAAiBC,UAEnDC,OAAM,EAACF,SAAEA,EAAQC,MAAEA,MAClBT,QAAQC,IAAI,sBAAoBO,QAAiBC","sources":["src/js/03-promises.js"],"sourcesContent":["refs = {\n  form: document.querySelector('.form'),\n  btn: document.querySelector('button'),\n};\nconsole.log(refs.form);\nconsole.log(refs.btn);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {});\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n// const mass = ['Roman', 'Ragnar', 'Thor', 'Odin']; // массив объектов\n// const promises = mass.map(prom); // возвращает массив объектов\n// // const promises = mass.map(mas => prom(mas)); // идентичная запись что и выше\n// function prom(mas) {\n//   const TIME = 2000; // дефолт интервала\n//   return new Promise(resolve => {\n//     setTimeout(() => {\n//       resolve(mas);\n//     }, TIME);\n//   }); // промис БЕЗ обработки ощибки\n// }\n// prom(promises).then(x => console.log(x)); // результат и вызов промиса\n"],"names":["refs","form","document","querySelector","btn","console","log","Math","random","Promise","resolve","reject","then","position","delay","catch"],"version":3,"file":"03-promises.0e39e3cd.js.map"}