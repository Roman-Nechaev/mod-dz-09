{"mappings":"YAAA,IAAIA,EAAc,EACdC,EAAa,EAEjBC,KAAO,CACLC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,SAC9BE,IAAKH,SAASC,cAAc,WAE9BG,QAAQC,IAAIP,KAAKC,MACjBK,QAAQC,IAAIP,KAAKI,OACjBE,QAAQC,IAAIP,KAAKK,KAGjBL,KAAKC,KAAKO,iBAAiB,UAI3B,SAAsBC,GACpBA,EAAEC,iBAEF,IAA8BC,EAAAF,EAAEG,cAA1BC,EAAwBF,EAAxBE,MAAOC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEnBhB,EAAac,EAAMG,MAgCrB,SAAeF,EAAMC,GACnBE,MAAQ,EACoBX,QAApBC,IAAIQ,GACZT,QAAQC,IAAIO,GACZ,IAAMI,EAAM,IACNC,EAAO,IAEbC,WAAaC,aAAY,WACvBf,QAAQC,IAAKW,GAAOC,EAAOD,GAC3BD,OAAS,EAELA,OAASF,GACXO,cAAcF,YAvCpB,SAAuBG,EAAUV,GAC/B,IAAMW,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B/B,GAAe,EAEfuB,aAAY,WACNG,EAEFI,EAAQ,CAAEL,WAAUV,UAGpBgB,EAAO,CAAEN,WAAUV,YAEpBA,MAKLiB,CAAchC,EAAaC,GACxBgC,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUV,EAAKmB,EAALnB,MACjBP,QAAQC,IAAI,uBAAwC0B,OAAfV,EAAS,QAAYU,OAANpB,EAAM,UAE3DqB,OAAM,SAAAF,G,IAAGT,EAAQS,EAART,SAAUV,EAAKmB,EAALnB,MAClBP,QAAQC,IAAI,sBAAuC0B,OAAfV,EAAS,QAAYU,OAANpB,EAAM,YAmB1DC,GA5CHqB,CADYrB,EAAKE,MACAD,EAAOC,U","sources":["src/js/03-promises.js"],"sourcesContent":["let positionNum = 1;\nlet firstDelay = 0;\nlet delayStep = 0;\nrefs = {\n  form: document.querySelector('.form'),\n  input: document.querySelector('input'),\n  btn: document.querySelector('button'),\n};\nconsole.log(refs.form);\nconsole.log(refs.input);\nconsole.log(refs.btn);\n///////////////////////////////////////////////////\n///////////////////////////////////////////////////\nrefs.form.addEventListener('submit', onSobmitForm);\n// refs.btn.addEventListener('click', onBtn);\n//////////////////////////////////////////////////\n\nfunction onSobmitForm(e) {\n  e.preventDefault();\n\n  let { delay, step, amount } = e.currentTarget;\n\n  firstDelay = delay.value;\n\n  delayStep = step.value;\n  onBtn(delayStep, amount.value);\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    positionNum += 1;\n\n    setInterval(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction funcBefore() {\n  createPromise(positionNum, firstDelay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nfunction onBtn(step, amount) {\n  count = 0; // начальное значение повтореений\n  console.log(amount);\n  console.log(step);\n  const foo = 1000;\n  const foo1 = 500;\n\n  intervalId = setInterval(function () {\n    console.log((foo += foo1 + foo));\n    count += 1;\n    // console.log((firstDelay = firstDelay + step));\n    if (count == amount) {\n      clearInterval(intervalId);\n    }\n    funcBefore();\n  }, step);\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// const mass = ['Roman', 'Ragnar', 'Thor', 'Odin']; // массив объектов\n// const promises = mass.map(prom); // возвращает массив объектов\n// // const promises = mass.map(mas => prom(mas)); // идентичная запись что и выше\n// function prom(mas) {\n//   const TIME = 2000; // дефолт интервала\n//   return new Promise(resolve => {\n//     setTimeout(() => {\n//       resolve(mas);\n//     }, TIME);\n//   }); // промис БЕЗ обработки ощибки\n// }\n// prom(promises).then(x => console.log(x)); // результат и вызов промиса\n"],"names":["$ce04d3a99e08e73b$var$positionNum","$ce04d3a99e08e73b$var$firstDelay","refs","form","document","querySelector","input","btn","console","log","addEventListener","e","preventDefault","_currentTarget","currentTarget","delay","step","amount","value","count","foo","foo1","intervalId","setInterval","clearInterval","position","shouldResolve","Math","random","Promise","resolve","reject","$ce04d3a99e08e73b$var$createPromise","then","param","concat","catch","$ce04d3a99e08e73b$var$onBtn"],"version":3,"file":"03-promises.ddb29e5e.js.map"}