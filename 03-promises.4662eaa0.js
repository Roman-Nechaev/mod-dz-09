let e=1;refs={form:document.querySelector(".form"),input:document.querySelector("input"),btn:document.querySelector("button")},console.log(refs.form),console.log(refs.input),console.log(refs.btn),refs.form.addEventListener("submit",(function(o){o.preventDefault();let{delay:n,step:t,amount:l}=o.currentTarget;console.log(n.value),function(o,n){count=0,console.log(n),console.log(o),intervalId=setInterval((function(){count+=1,count==n&&clearInterval(intervalId),function(o,n){const t=Math.random()>.3;return new Promise(((l,r)=>{e+=1,setInterval((()=>{t?l({position:o,delay:n}):r({position:o,delay:n})}),n)}))}(e,1e3).then((({position:e,delay:o})=>{console.log(`✅ Fulfilled promise ${e} in ${o}ms`)})).catch((({position:e,delay:o})=>{console.log(`❌ Rejected promise ${e} in ${o}ms`)}))}),o)}(t.value,l.value)}));
//# sourceMappingURL=03-promises.4662eaa0.js.map
