{"mappings":"AAAAA,KAAO,CACLC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,SAC9BE,IAAKH,SAASC,cAAc,WAE9BG,QAAQC,IAAIP,KAAKC,MACjBK,QAAQC,IAAIP,KAAKI,OACjBE,QAAQC,IAAIP,KAAKK,KAGjBL,KAAKC,KAAKO,iBAAiB,UAI3B,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAEhCR,QAAQC,IAAII,EAAMI,OAgCpB,SAAeH,EAAMC,GACnBG,MAAQ,EACoBV,QAApBC,IAAIM,GACZP,QAAQC,IAAIK,GACZK,WAAaC,aAAY,WACvBF,OAAS,EACLA,OAASH,GACXM,cAAcF,YAhCpB,SAAuBG,EAAUT,GAC/B,MAAMU,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BR,aAAY,KACNG,EAEFI,EAAQ,C,SAAEL,E,MAAUT,IAGpBe,EAAO,C,SAAEN,E,MAAUT,MAEpBA,MAKLgB,CAAc,EAAG,MACdC,MAAK,EAACR,SAAEA,EAAQT,MAAEA,MACjBL,QAAQC,IAAI,uBAAqBa,QAAiBT,UAEnDkB,OAAM,EAACT,SAAEA,EAAQT,MAAEA,MAClBL,QAAQC,IAAI,sBAAoBa,QAAiBT,YAclDC,GAtCHkB,CAAMlB,EAAKG,MAAOF,EAAOE","sources":["src/js/03-promises.js"],"sourcesContent":["refs = {\n  form: document.querySelector('.form'),\n  input: document.querySelector('input'),\n  btn: document.querySelector('button'),\n};\nconsole.log(refs.form);\nconsole.log(refs.input);\nconsole.log(refs.btn);\n///////////////////////////////////////////////////\n///////////////////////////////////////////////////\nrefs.form.addEventListener('submit', onSobmitForm);\n// refs.btn.addEventListener('click', onBtn);\n//////////////////////////////////////////////////\n\nfunction onSobmitForm(e) {\n  e.preventDefault();\n\n  let { delay, step, amount } = e.currentTarget;\n\n  console.log(delay.value);\n\n  // console.log(step.value);\n  // console.log(amount.value);\n  onBtn(step.value, amount.value);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction funcBefore() {\n  createPromise(2, 2500)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nfunction onBtn(step, amount) {\n  count = 0; // начальное значение повтореений\n  console.log(amount);\n  console.log(step);\n  intervalId = setInterval(function () {\n    count += 1;\n    if (count == amount) {\n      clearInterval(intervalId);\n    }\n    funcBefore();\n  }, step);\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// const mass = ['Roman', 'Ragnar', 'Thor', 'Odin']; // массив объектов\n// const promises = mass.map(prom); // возвращает массив объектов\n// // const promises = mass.map(mas => prom(mas)); // идентичная запись что и выше\n// function prom(mas) {\n//   const TIME = 2000; // дефолт интервала\n//   return new Promise(resolve => {\n//     setTimeout(() => {\n//       resolve(mas);\n//     }, TIME);\n//   }); // промис БЕЗ обработки ощибки\n// }\n// prom(promises).then(x => console.log(x)); // результат и вызов промиса\n"],"names":["refs","form","document","querySelector","input","btn","console","log","addEventListener","e","preventDefault","delay","step","amount","currentTarget","value","count","intervalId","setInterval","clearInterval","position","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","then","catch","$47d4ff9957288465$var$onBtn"],"version":3,"file":"03-promises.dad026cf.js.map"}